generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum PAYMENT_METHOD {
  CASH
  CARD
  TRANSFER

  @@map("payment_methods")
}

model User {
  id       String @id @default(cuid())
  username String @unique
  name     String
  password String
  sales    Sale[]
  role     Role   @default(USER)

  @@map("users")
}

model Product {
  id              String            @id @default(cuid())
  name            String
  description     String?
  price           Float
  stock           Int               @default(0)
  updatedAt       DateTime          @updatedAt
  category        Category          @relation(fields: [categoryId], references: [id], onDelete: SetDefault, onUpdate: Cascade)
  categoryId      Int               @default(0)
  ProductOnSale   ProductOnSale[]
  ProductOnSupply ProductOnSupply[]

  @@map("products")
}

model Sale {
  id            Int             @id @default(autoincrement())
  total         Float           @default(0)
  date          DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  paymentMethod PAYMENT_METHOD  @default(CASH)
  products      ProductOnSale[]
  userId        String?
  user          User?           @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: SetNull)

  @@map("sales")
}

model ProductOnSale {
  saleId    Int
  productId String
  quantity  Int
  price     Float
  sale      Sale    @relation(fields: [saleId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@id([saleId, productId])
  @@map("products_on_sale")
}

model Provider {
  id       String   @id @default(cuid())
  name     String
  address  String?
  phone    String?
  email    String?
  supplies Supply[]

  @@map("providers")
}

model Supply {
  id             Int               @id @default(autoincrement())
  providerId     String            @default("0")
  total          Float
  date           DateTime          @default(now())
  supplyProducts ProductOnSupply[]
  provider       Provider          @relation(fields: [providerId], references: [id], onUpdate: Cascade, onDelete: SetDefault)

  @@map("supplies")
}

model ProductOnSupply {
  supplyId  Int
  productId String

  quantity Int
  price    Float
  supply   Supply  @relation(fields: [supplyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  product  Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([supplyId, productId])
  @@map("products_on_supply")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  products    Product[]

  @@map("categories")
}
